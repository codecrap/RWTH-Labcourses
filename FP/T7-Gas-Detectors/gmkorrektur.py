# -*- coding: utf-8 -*-
"""
Created on Wed Mar 27 23:04:19 2019

@author: assil
"""

import scipy
import scipy.fftpack
import scipy.odr
import numpy as np
import matplotlib.pyplot as plt
from numpy import sqrt,sin,cos,log,exp,diag
import uncertainties.unumpy as unp
from uncertainties import ufloat
import matplotlib
matplotlib.style.use("../labreport.mplstyle")



Voltage=[110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310, 320, 330, 340, 350, 360, 370, 380, 390, 400, 410, 420, 430, 440, 450, 460, 470, 480, 490, 500, 510, 520, 530, 540, 550, 560]
Counts=[0.0, 0.8, 3.7, 9.7, 15.1, 22.6, 31.3, 43.6, 53.5, 66.7, 70.0, 84.3, 94.5, 104.5, 115.0, 121.2, 137.0, 144.1, 154.4, 161.6, 168.5, 176.5, 187.0, 191.9, 200.7, 206.9, 210.8, 216.8, 221.8, 226.8, 231.1, 236.4, 237.8, 243.6, 246.1, 249.6, 257.1, 254.8, 253.7, 260.3, 261.8, 264.1, 269.0, 264.3, 272.3, 268.2]
#[0,8,37,97,151,226,313,436,535,667,700,843,945,1045,1150,1212,1370,1441,1544,1616,1685,1765,1870,1919,2007,2069,2108,2168,2218,2268,2311,2364,2378,2436,2461,2496,2571,2548,2537,2603,2618,2641,2690,2643,2723,2682]
Countswithoutoffset=[0.0, 0.4, 3.3, 9.3, 14.7, 22.2, 30.9, 43.2, 53.1, 66.3, 69.6, 83.9, 94.1, 104.1, 114.6, 120.8, 136.6, 143.7, 154.0, 161.2, 168.1, 176.1, 186.6, 191.5, 200.3, 206.5, 210.4, 216.4, 221.4, 226.4, 230.7, 236.0, 237.4, 243.2, 245.7, 249.2, 256.7, 254.4, 253.3, 259.9, 261.4, 263.7, 268.6, 263.9, 271.9, 267.8]
#[0, 4, 33, 93, 147, 222, 309, 432, 531, 663, 696, 839, 941, 1041, 1146, 1208, 1366, 1437, 1540, 1612, 1681, 1761, 1866, 1915, 2003, 2065, 2104, 2164, 2214, 2264, 2307, 2360, 2374, 2432, 2457, 2492, 2567, 2544, 2533, 2599, 2614, 2637, 2686, 2639, 2719, 2678]
Correctedcounts=[0.0, 0.4000675313993002, 3.3046019887295044, 9.336642587498897, 14.79175919901517, 22.409945331846878, 31.308253362192318, 44.00217729292086, 54.317149550558824, 68.20837483619188, 71.70609402894289, 86.97958167279049, 97.99125222406819, 108.8832635441471, 120.42384148271383, 127.28888169552162, 144.95601868850244, 152.97672262754605, 164.70376850778388, 172.96627286438158, 180.9352187335654, 190.2373353896106, 202.54982660605947, 208.3362797776731, 218.793904880251, 226.2128679519355, 230.90146389772207, 238.14785239939465, 244.21742984429653, 250.31532655093784, 255.58231888829778, 262.1034020133095, 263.8313648594403, 271.01430670261175, 274.12250118429404, 278.48628622668514, 287.885934815088, 284.9962896709458, 283.6165056968513, 291.91679147167173, 293.81046774536543, 296.7193440083284, 302.937751818416, 296.9725900713702, 307.14202929721523, 301.9205211702881]
#[0.0, 4.000675313993002, 33.046019887295046, 93.36642587498898, 147.9175919901517, 224.09945331846876, 313.0825336219232, 440.0217729292086, 543.1714955055883, 682.0837483619188, 717.0609402894289, 869.7958167279049, 979.9125222406819, 1088.832635441471, 1204.2384148271383, 1272.8888169552163, 1449.5601868850245, 1529.7672262754606, 1647.0376850778387, 1729.6627286438159, 1809.352187335654, 1902.373353896106, 2025.4982660605947, 2083.362797776731, 2187.93904880251, 2262.128679519355, 2309.014638977221, 2381.4785239939465, 2442.174298442965, 2503.1532655093783, 2555.823188882978, 2621.034020133095, 2638.3136485944033, 2710.1430670261175, 2741.22501184294, 2784.8628622668516, 2878.8593481508797, 2849.962896709458, 2836.1650569685125, 2919.1679147167174, 2938.1046774536544, 2967.193440083284, 3029.37751818416, 2969.725900713702, 3071.4202929721523, 3019.205211702881]
#errCountscorrected=[0.0, 0.6325089180393428, 1.8178564268746595, 3.0555920191509367, 3.8460056160925156, 4.733914377325267, 5.595377856963041, 6.633413698309556, 7.370016930140583, 8.258836167172218, 8.467945088918732, 9.32628445163402, 9.899053097345634, 10.434714348948278, 10.973779726362007, 11.282237441904936, 12.039768215730003, 12.368375909049096, 12.833696603386878, 13.151664262152588, 13.451216254806306, 13.792655124725282, 14.232000091556333, 14.433858797205724, 14.791683639134897, 15.040374594801005, 15.195442208034686, 15.432039800343786, 15.627457561749976, 15.821356659621129, 15.9869421368909, 16.189607840009884, 16.242886592580774, 16.46251216256534, 16.556645227348866, 16.68790838381746, 16.967201737914476, 16.881833125313904, 16.840917602578884, 17.085572611758487, 17.14090043566456, 17.225543358870524, 17.40510706138908, 17.232892678577507, 17.525468019348732, 17.375860300148826]
errCounts=[0.0, 0.8944271909999159, 1.9235384061671346, 3.1144823004794873, 3.8858718455450894, 4.753945729601885, 5.594640292279746, 6.603029607687671, 7.314369419163897, 8.167006795638168, 8.366600265340756, 9.181503144910424, 9.72111104761179, 10.222524150130436, 10.723805294763608, 11.009087155618309, 11.704699910719626, 12.004165943538101, 12.425779653607254, 12.712198865656562, 12.98075498574717, 13.285330255586423, 13.674794331177344, 13.852797551397336, 14.166862743741113, 14.384018909887459, 14.51895313030523, 14.724129855444769, 14.892951352905172, 15.05988047761336, 15.201973556088038, 15.375304875026057, 15.42076522096099, 15.607690412101336, 15.687574701017363, 15.798734126505199, 16.034338152851834, 15.962455951387932, 15.927962832703999, 16.133815419794537, 16.180234856144704, 16.2511538051918, 16.401219466856727, 16.25730604989646, 16.501515081955354, 16.376812876747415]
errCountscorrected=[0.0,0.89472923,1.92890706,3.13907316,3.93453543,4.844287,5.74345059,6.85052861,7.65353004,8.64393045,8.88060745,9.86789444,10.54171504,11.18353098,11.84144327,12.22357899,13.18048495,13.60407943,14.21311528,14.63569861,15.03871556,15.50404968,16.11243862,16.39569158,16.90371751,17.26134946,17.48627101,17.83234529,18.1208619,18.40956657,18.65805616,18.96465935,19.04571776,19.38188159,19.52697029,19.73030695,20.16694878,20.032904,19.96884096,20.35366766,20.44128455,20.57574938,20.86271952,20.58744892,21.05638943,20.81581917]



fig, ax = plt.subplots()
ax.plot(Voltage,Counts, 'b.')
plt.errorbar(Voltage,Counts,errCounts, fmt='b.', label="Measured curve")
ax.plot(Voltage,Correctedcounts, 'r.')
plt.errorbar(Voltage,Correctedcounts,errCountscorrected, fmt='r.', label="Curve with dead time correction")
ax.set_title("Geiger counter characteristic curves")
ax.set_xlabel("Voltage (V)")
ax.legend(loc='lower right')
ax.set_ylabel("Event counts (1/s)")

fig.savefig("Figures/" + "Geiger_characteristic_curves")
fig.show()

